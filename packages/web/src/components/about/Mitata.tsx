import { origin } from '../../util/helpers';
import { Wink } from '../Button';

export const Mitata = () => {
  const url = new URL('/', origin);
  url.searchParams.set('type', 'median');
  url.searchParams.set('br', '1');
  url.searchParams.append(
    'data',
    JSON.stringify({
      benchmarks: [
        {
          alias: 'sleep 2.1s',
          runs: [
            {
              stats: {
                samples: [
                  2100617875, 2101011375, 2101379667, 2101386334, 2101409917, 2101517584, 2101943916, 2102111417,
                  2102819000, 2102983959, 2103255958, 2107508833,
                ],
              },
              name: 'sleep 2.1s',
            },
          ],
        },
        {
          alias: 'sleep 2.2s',
          runs: [
            {
              stats: {
                kind: 'fn',
                samples: [
                  2200299791, 2200441500.000004, 2200454208, 2201334625, 2201374125, 2201430041, 2201702959, 2201707625,
                  2201790375, 2202938000, 2203260584, 2206625291,
                ],
              },
              name: 'sleep 2.2s',
            },
          ],
        },
        {
          alias: 'sleep 2.3s',
          runs: [
            {
              stats: {
                kind: 'fn',
                samples: [
                  2299657708, 2300495375, 2300578541, 2300587458, 2300834125, 2300846292, 2301183417, 2301186208,
                  2301333500, 2301397208.9999924, 2301521375, 2301543250,
                ],
                min: 2299657708,
                max: 2301543250,
                p25: 2300578541,
                p50: 2300846292,
                p75: 2301333500,
                p99: 2301521375,
                p999: 2301521375,
                avg: 2300930371.4999995,
                ticks: 12,
                heap: {
                  _: 11,
                  total: 22904,
                  min: 1928,
                  max: 2240,
                  avg: 2082.181818181818,
                },
              },
              name: 'sleep 2.3s',
            },
          ],
        },
      ],
    })
  );

  return (
    <>
      <p>
        Drop the file or paste its contents generated by <code>{`run({ format: 'json' })`}</code>. Series data is
        truncated to 100k samples each (a notification will show if there is any data loss).
      </p>

      <p>Example script:</p>

      <div class="flex flex-wrap justify-start gap-8">
        <pre class="border p-4 bg-neutral-800 light:bg-neutral-100 high-contrast:bg-background">{`
import { run, bench } from 'mitata';

bench('sleep 2.1s', () => new Promise(resolve => setTimeout(resolve, 2100)));
bench('sleep 2.2s', () => new Promise(resolve => setTimeout(resolve, 2200)));
bench('sleep 2.3s', () => new Promise(resolve => setTimeout(resolve, 2300)));

await run({ format: 'json' });
`}</pre>

        <pre class="border p-4 bg-neutral-800 light:bg-neutral-100 high-contrast:bg-background">{`
node sleep.ts > results.json`}</pre>
      </div>

      <p>Example output:</p>

      <div class="flex flex-wrap justify-start gap-8">
        <pre class="border p-4 bg-neutral-800 light:bg-neutral-100 high-contrast:bg-background">{`
{
  "layout": [{ "name": null, "types": [] }],
  "benchmarks": [
    {
      "alias": "sleep 2.1s",
      "runs": [
        {
          "stats": {
            "samples": [
              2100617875, 2101011375, 2101379667, 2101386334, 2101409917,
              2101517584, 2101943916, 2102111417, 2102819000, 2102983959,
              2103255958, 2107508833
            ],
            "min": 2100617875,
            "max": 2107508833,
            "p25": 2101379667,
            "p50": 2101517584,
            "p75": 2102819000,
            "p99": 2103255958,
            "p999": 2103255958,
            "avg": 2102328819.5833333,
            "ticks": 12
          },
          "args": {},
          "name": "sleep 2.1s"
        }
      ],
    }
  ]
}
`}</pre>
      </div>
      <p class="wrap-anywhere max-w-[90%]">
        Drop the file <code>results.json</code> or copy-paste its contents onto the chart, or try this example link:
      </p>

      <p>
        <Wink url={url} />
      </p>
    </>
  );
};
