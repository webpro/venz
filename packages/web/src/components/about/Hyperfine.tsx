import { origin } from '../../util/helpers';
import { Link, Wink } from '../Button';

export const Hyperfine = () => {
  const url = new URL('/', origin);
  url.searchParams.set('type', 'median');
  url.searchParams.set('br', '1');
  url.searchParams.append(
    'data',
    JSON.stringify({
      results: [
        {
          command: 'sleep 0.35',
          mean: 0.36833403254,
          stddev: 0.0022131087112131635,
          median: 0.36842083684000004,
          user: 0.004151359999999998,
          system: 0.0044277399999999995,
          min: 0.36323077384,
          max: 0.37231769084000005,
          times: [
            0.36811944084000003, 0.36773835784000003, 0.37231769084000005, 0.36323077384, 0.36910831584000003,
            0.36815719084000004, 0.36806119084000005, 0.36868448284000005, 0.36923681584, 0.36868606584,
          ],
          exit_codes: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        },
        {
          command: 'sleep 0.31',
          mean: 0.32774909924,
          stddev: 0.0016290075685424868,
          median: 0.32849373234,
          user: 0.00461136,
          system: 0.004440939999999999,
          min: 0.32424739884000003,
          max: 0.32908635784,
          times: [
            0.32766448284000005, 0.32852669084, 0.32894244084, 0.32859089984, 0.32424739884000003, 0.32908635784,
            0.32780769084000005, 0.32539560684, 0.32846077384000005, 0.32876864984000004,
          ],
          exit_codes: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        },
        {
          command: 'sleep 0.33',
          mean: 0.34931401164000003,
          stddev: 0.0038889942457800007,
          median: 0.34879402384,
          user: 0.0042200599999999994,
          system: 0.004495439999999999,
          min: 0.34237498284,
          max: 0.35686323184,
          times: [
            0.34762089884, 0.34802077484000005, 0.34890223184, 0.34985627484000004, 0.34892852384000006, 0.34237498284,
            0.34777194084, 0.34868581584, 0.35686323184, 0.35411544084,
          ],
          exit_codes: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        },
      ],
    }),
  );

  return (
    <>
      <p>
        Venz was originally created to visualize <Link href="https://github.com/sharkdp/hyperfine">hyperfine</Link>{' '}
        output. The name Venz is derived from bENchmark VisualiZer.
      </p>

      <p>
        Drop the file or paste its contents generated by <code>hyperfine --export-json</code>. See the examples and use{' '}
        <Link href="/config">configurations</Link> to create and manage hyperfine commands.
      </p>

      <p>Example command:</p>

      <div class="flex flex-wrap justify-start gap-8">
        <pre class="border p-4 bg-neutral-800 light:bg-neutral-100 high-contrast:bg-background">{`
hyperfine --warmup 3
  'sleep 0.35'
  'sleep 0.31'
  'sleep 0.33'
  --export-json results.json
`}</pre>
      </div>

      <p>Example output:</p>

      <div class="flex flex-wrap justify-start gap-8">
        <pre class="border p-4 bg-neutral-800 light:bg-neutral-100 high-contrast:bg-background">{`
{
  "results": [
    {
      "command": "sleep 0.35",
      "mean": 0.35,
      "stddev": 0,
      "median": 0.35,
      "user": 0.0001,
      "system": 0.0001,
      "min": 0.35,
      "max": 0.35,
      "times": [0.35, 0.35, 0.35],
      "exit_codes": [0, 0, 0]
    },
    {
      "command": "sleep 0.31",
      "mean": 0.31,
      "stddev": 0,
      "median": 0.31,
      "user": 0.0001,
      "system": 0.0001,
      "min": 0.31,
      "max": 0.31,
      "times": [0.31, 0.31, 0.31],
      "exit_codes": [0, 0, 0]
    }
  ]
}
`}</pre>
      </div>
      <p class="wrap-anywhere max-w-[90%]">
        Drop the file <code>results.json</code> or copy-paste its contents onto the chart, or try this example link:
      </p>

      <p>
        <Wink url={url} />
      </p>
    </>
  );
};
